# Generated by Django 4.2.7 on 2025-09-28 12:51

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Department name', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Department description')),
                ('budget', models.DecimalField(decimal_places=2, default=0, help_text='Annual department budget', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Department status')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(help_text='Unique employee identifier', max_length=20, unique=True)),
                ('first_name', models.CharField(help_text='Employee first name', max_length=50)),
                ('last_name', models.CharField(help_text='Employee last name', max_length=50)),
                ('email', models.EmailField(help_text='Employee email address', max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, help_text='Phone number', max_length=20)),
                ('position', models.CharField(choices=[('intern', 'Intern'), ('junior', 'Junior Developer'), ('senior', 'Senior Developer'), ('lead', 'Team Lead'), ('manager', 'Manager'), ('director', 'Director'), ('vp', 'Vice President'), ('ceo', 'CEO')], default='junior', help_text='Job position', max_length=20)),
                ('hire_date', models.DateField(help_text='Employee hire date')),
                ('birth_date', models.DateField(blank=True, help_text='Date of birth', null=True)),
                ('salary', models.DecimalField(decimal_places=2, help_text='Current annual salary', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True, help_text='Employment status')),
                ('department', models.ForeignKey(help_text='Employee department', on_delete=django.db.models.deletion.PROTECT, related_name='employees', to='employees.department')),
                ('user', models.OneToOneField(blank=True, help_text='Associated user account', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
                'ordering': ['employee_id'],
            },
        ),
        migrations.CreateModel(
            name='Salary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('effective_date', models.DateField(help_text='Effective date of salary change')),
                ('base_salary', models.DecimalField(decimal_places=2, help_text='Base annual salary', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('allowances', models.DecimalField(decimal_places=2, default=0, help_text='Additional allowances', max_digits=8)),
                ('deductions', models.DecimalField(decimal_places=2, default=0, help_text='Salary deductions', max_digits=8)),
                ('bonus', models.DecimalField(decimal_places=2, default=0, help_text='Performance bonus', max_digits=8)),
                ('salary_type', models.CharField(choices=[('initial', 'Initial Salary'), ('promotion', 'Promotion'), ('annual_raise', 'Annual Raise'), ('performance_bonus', 'Performance Bonus'), ('adjustment', 'Salary Adjustment'), ('correction', 'Salary Correction')], default='initial', help_text='Type of salary adjustment', max_length=20)),
                ('reason', models.TextField(blank=True, help_text='Reason for salary change')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='Manager who approved the change', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_salaries', to='employees.employee')),
                ('employee', models.ForeignKey(help_text='Employee reference', on_delete=django.db.models.deletion.CASCADE, related_name='salary_history', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Salary Record',
                'verbose_name_plural': 'Salary Records',
                'ordering': ['-effective_date', 'employee'],
            },
        ),
        migrations.CreateModel(
            name='Performance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_period_start', models.DateField(help_text='Review period start date')),
                ('review_period_end', models.DateField(help_text='Review period end date')),
                ('technical_skills', models.PositiveIntegerField(help_text='Technical skills rating (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('communication', models.PositiveIntegerField(help_text='Communication skills rating (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('teamwork', models.PositiveIntegerField(help_text='Teamwork rating (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('leadership', models.PositiveIntegerField(help_text='Leadership rating (1-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('goals_achieved', models.PositiveIntegerField(default=0, help_text='Goals achievement percentage', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('feedback', models.TextField(help_text='Performance feedback and comments')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(help_text='Employee being reviewed', on_delete=django.db.models.deletion.CASCADE, related_name='performance_reviews', to='employees.employee')),
                ('reviewer', models.ForeignKey(help_text='Manager conducting the review', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conducted_reviews', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Performance Review',
                'verbose_name_plural': 'Performance Reviews',
                'ordering': ['-review_period_end', 'employee'],
            },
        ),
        migrations.AddField(
            model_name='department',
            name='manager',
            field=models.ForeignKey(blank=True, help_text='Department manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_departments', to='employees.employee'),
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Attendance date')),
                ('check_in_time', models.TimeField(blank=True, help_text='Check-in time', null=True)),
                ('check_out_time', models.TimeField(blank=True, help_text='Check-out time', null=True)),
                ('break_duration', models.PositiveIntegerField(default=0, help_text='Break duration in minutes')),
                ('status', models.CharField(choices=[('present', 'Present'), ('absent', 'Absent'), ('late', 'Late'), ('half_day', 'Half Day'), ('holiday', 'Holiday'), ('sick_leave', 'Sick Leave'), ('vacation', 'Vacation')], default='present', help_text='Attendance status', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Additional notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(help_text='Employee reference', on_delete=django.db.models.deletion.CASCADE, related_name='attendance_records', to='employees.employee')),
            ],
            options={
                'verbose_name': 'Attendance Record',
                'verbose_name_plural': 'Attendance Records',
                'ordering': ['-date', 'employee'],
                'unique_together': {('employee', 'date')},
            },
        ),
    ]
